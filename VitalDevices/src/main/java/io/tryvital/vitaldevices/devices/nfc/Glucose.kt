package io.tryvital.vitaldevices.devices.nfc

import java.time.Instant
import kotlin.math.ln
import kotlin.math.pow
import kotlin.math.round

data class Glucose(
    val id: Int,
    val date: Instant,
    val rawValue: Int,
    val rawTemperature: Int,
    val temperatureAdjustment: Int,
    val hasError: Boolean,
    val dataQuality: DataQuality,
    val dataQualityFlags: Int,
    val value: Int = 0,
    val valueUnit: Double = 0.0,
    val temperature: Double = 0.0,
)

@JvmInline
value class DataQuality(private val rawValue: UShort) {
    companion object {
        val OK = DataQuality(0x0u)

        // lower 9 of 11 bits in the measurement field 0xe/0xb
        val SD14_FIFO_OVERFLOW  = DataQuality(0x0001u)
        /// delta between two successive of 4 filament measurements (1-2, 2-3, 3-4) > fram[332] (Libre 1: 90)
        /// indicates too much jitter in measurement
        val FILTER_DELTA        = DataQuality(0x0002u)
        val WORK_VOLTAGE        = DataQuality(0x0004u)
        val PEAK_DELTA_EXCEEDED = DataQuality(0x0008u)
        val AVG_DELTA_EXCEEDED  = DataQuality(0x0010u)
        /// NFC activity detected during a measurement which was retried since corrupted by NFC power usage
        val RF                  = DataQuality(0x0020u)
        val REF_R               = DataQuality(0x0040u)
        /// measurement result exceeds 0x3FFF (14 bits)
        val SIGNAL_SATURATED    = DataQuality(0x0080u)
        /// 4 times averaged raw reading < fram[330] (minimumThreshold: 150)
        val SENSOR_SIGNAL_LOW   = DataQuality(0x0100u)

        /// as an error code it actually indicates that one or more errors occurred in the
        /// last measurement cycle and is stored in the measurement bit 0x19/0x1 ("hasError")
        val THERMISTOR_OUT_OF_RANGE = DataQuality(0x0800u)

        val TEMP_HIGH           = DataQuality(0x2000u)
        val TEMP_LOW            = DataQuality(0x4000u)
        val INVALID_DATA        = DataQuality(0x8000u)
    }

    fun contains(other: DataQuality): Boolean {
        return (this.rawValue and other.rawValue) != 0u.toUShort()
    }

    override fun toString(): String {
        val d = mutableMapOf<String, Boolean>()
        d["OK"]                  = this == OK
        d["SD14_FIFO_OVERFLOW"]  = this.contains(SD14_FIFO_OVERFLOW)
        d["FILTER_DELTA"]        = this.contains(FILTER_DELTA)
        d["WORK_VOLTAGE"]        = this.contains(WORK_VOLTAGE)
        d["PEAK_DELTA_EXCEEDED"] = this.contains(PEAK_DELTA_EXCEEDED)
        d["AVG_DELTA_EXCEEDED"]  = this.contains(AVG_DELTA_EXCEEDED)
        d["RF"]                  = this.contains(RF)
        d["REF_R"]               = this.contains(REF_R)
        d["SIGNAL_SATURATED"]    = this.contains(SIGNAL_SATURATED)
        d["SENSOR_SIGNAL_LOW"]   = this.contains(SENSOR_SIGNAL_LOW)
        d["THERMISTOR_OUT_OF_RANGE"] = this.contains(THERMISTOR_OUT_OF_RANGE)
        d["TEMP_HIGH"]           = this.contains(TEMP_HIGH)
        d["TEMP_LOW"]            = this.contains(TEMP_LOW)
        d["INVALID_DATA"]        = this.contains(INVALID_DATA)
        return "0x${rawValue.toString(16)}: ${d.filterValues { it }.keys.joinToString(", ")}"
    }
}


fun factoryGlucose(rawGlucose: Glucose, calibrationInfo: CalibrationInfo): Glucose {
    if (rawGlucose.id < 0 || rawGlucose.rawValue <= 0 || calibrationInfo == CalibrationInfo()) {
        return rawGlucose
    }

    val x: Double = 1000.0 + 71500.0
    val y: Double = 1000.0

    val ca = 0.0009180023
    val cb = 0.0001964561
    val cc = 0.0000007061775
    val cd = 0.00000005283566

    val R = ((rawGlucose.rawTemperature.toDouble() * x) / (rawGlucose.temperatureAdjustment + calibrationInfo.i6.toInt()).toDouble()) - y
    val logR = ln(R)
    val d = logR.pow(3) * cd + logR.pow(2) * cc + logR * cb + ca
    val temperature = 1 / d - 273.15

    // https://github.com/JohanDegraeve/xdripswift/blob/master/xdrip/BluetoothTransmitter/CGM/Libre/Utilities/LibreMeasurement.swift

    val t1 = doubleArrayOf(
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            0.75, 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
            1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5, 2.75, 3.0,
    )

    @Suppress("FloatingPointLiteralPrecision") val t2 = doubleArrayOf(
            0.037744199999999999, 0.037744199999999999, 0.037744199999999999, 0.037744199999999999, 0.037744199999999999, 0.037744199999999999, 0.037744199999999999, 0.037744199999999999,
            0.038121700000000001, 0.038121700000000001, 0.038121700000000001, 0.038121700000000001, 0.038121700000000001, 0.038121700000000001, 0.038121700000000001, 0.038121700000000001,
            0.0385029, 0.0385029, 0.0385029, 0.0385029, 0.0385029, 0.0385029, 0.0385029, 0.0385029,
            0.038887900000000003, 0.038887900000000003, 0.038887900000000003, 0.038887900000000003, 0.038887900000000003, 0.038887900000000003, 0.038887900000000003, 0.038887900000000003,
            0.039276800000000001, 0.039276800000000001, 0.039276800000000001, 0.039276800000000001, 0.039276800000000001, 0.039276800000000001, 0.039276800000000001, 0.039276800000000001,
            0.039669599999999999, 0.039669599999999999, 0.039669599999999999, 0.039669599999999999, 0.039669599999999999, 0.039669599999999999, 0.039669599999999999, 0.039669599999999999,
            0.040066299999999999, 0.040066299999999999, 0.040066299999999999, 0.040066299999999999, 0.040066299999999999, 0.040066299999999999, 0.040066299999999999, 0.040066299999999999,
            0.0404669, 0.0404669, 0.0404669, 0.0404669, 0.0404669, 0.0404669, 0.0404669, 0.0404669,
            0.040871600000000001, 0.040871600000000001, 0.040871600000000001, 0.040871600000000001, 0.040871600000000001, 0.040871600000000001, 0.040871600000000001, 0.040871600000000001,
            0.041280299999999999, 0.041280299999999999, 0.041280299999999999, 0.041280299999999999, 0.041280299999999999, 0.041280299999999999, 0.041280299999999999, 0.041280299999999999,
            0.041693099999999997, 0.041693099999999997, 0.041693099999999997, 0.041693099999999997, 0.041693099999999997, 0.041693099999999997, 0.041693099999999997, 0.041693099999999997,
            0.042110000000000002, 0.042110000000000002, 0.042110000000000002, 0.042110000000000002, 0.042110000000000002, 0.042110000000000002, 0.042110000000000002, 0.042110000000000002,
            0.042531100000000002, 0.042531100000000002, 0.042531100000000002, 0.042531100000000002, 0.042531100000000002, 0.042531100000000002, 0.042531100000000002, 0.042531100000000002,
            0.042956500000000002, 0.042956500000000002, 0.042956500000000002, 0.042956500000000002, 0.042956500000000002, 0.042956500000000002, 0.042956500000000002, 0.042956500000000002,
            0.043386000000000001, 0.043386000000000001, 0.043386000000000001, 0.043386000000000001, 0.043386000000000001, 0.043386000000000001, 0.043386000000000001, 0.043386000000000001,
            0.043819900000000002, 0.043819900000000002, 0.043819900000000002, 0.043819900000000002, 0.043819900000000002, 0.043819900000000002, 0.043819900000000002, 0.043819900000000002,
            0.044258100000000002, 0.044258100000000002, 0.044258100000000002, 0.044258100000000002, 0.044258100000000002, 0.044258100000000002, 0.044258100000000002, 0.044258100000000002,
            0.044700700000000003, 0.044700700000000003, 0.044700700000000003, 0.044700700000000003, 0.044700700000000003, 0.044700700000000003, 0.044700700000000003, 0.044700700000000003,
            0.045147699999999999, 0.045147699999999999, 0.045147699999999999, 0.045147699999999999, 0.045147699999999999, 0.045147699999999999, 0.045147699999999999, 0.045147699999999999,
            0.045599099999999997, 0.045599099999999997, 0.045599099999999997, 0.045599099999999997, 0.045599099999999997, 0.045599099999999997, 0.045599099999999997, 0.045599099999999997,
            0.046055100000000002, 0.046055100000000002, 0.046055100000000002, 0.046055100000000002, 0.046055100000000002, 0.046055100000000002, 0.046055100000000002, 0.046055100000000002,
            0.0465157, 0.0465157, 0.0465157, 0.0465157, 0.0465157, 0.0465157, 0.0465157, 0.0465157,
            0.046980800000000003, 0.046980800000000003, 0.046980800000000003, 0.046980800000000003, 0.046980800000000003, 0.046980800000000003, 0.046980800000000003, 0.046980800000000003,
            0.047450600000000002, 0.047450600000000002, 0.047450600000000002, 0.047450600000000002, 0.047450600000000002, 0.047450600000000002, 0.047450600000000002, 0.047450600000000002,
            0.047925200000000001, 0.047925200000000001, 0.047925200000000001, 0.047925200000000001, 0.047925200000000001, 0.047925200000000001, 0.047925200000000001, 0.047925200000000001,
            0.0484044, 0.0484044, 0.0484044, 0.0484044, 0.0484044, 0.0484044, 0.0484044, 0.0484044,
            0.048888399999999999, 0.048888399999999999, 0.048888399999999999, 0.048888399999999999, 0.048888399999999999, 0.048888399999999999, 0.048888399999999999, 0.048888399999999999,
            0.049377299999999999, 0.049377299999999999, 0.049377299999999999, 0.049377299999999999, 0.049377299999999999, 0.049377299999999999, 0.049377299999999999, 0.049377299999999999,
            0.049871100000000002, 0.049871100000000002, 0.049871100000000002, 0.049871100000000002, 0.049871100000000002, 0.049871100000000002, 0.049871100000000002, 0.049871100000000002,
            0.050369799999999999, 0.050369799999999999, 0.050369799999999999, 0.050369799999999999, 0.050369799999999999, 0.050369799999999999, 0.050369799999999999, 0.050369799999999999,
            0.050873500000000002, 0.050873500000000002, 0.050873500000000002, 0.050873500000000002, 0.050873500000000002, 0.050873500000000002, 0.050873500000000002, 0.050873500000000002,
            0.051382299999999999, 0.051382299999999999, 0.051382299999999999, 0.051382299999999999, 0.051382299999999999, 0.051382299999999999, 0.051382299999999999, 0.051382299999999999,
            0.051896100000000001, 0.051896100000000001, 0.051896100000000001, 0.051896100000000001, 0.051896100000000001, 0.051896100000000001, 0.051896100000000001, 0.051896100000000001,
            0.052415000000000003, 0.052415000000000003, 0.052415000000000003, 0.052415000000000003, 0.052415000000000003, 0.052415000000000003, 0.052415000000000003, 0.052415000000000003,
            0.052939199999999999, 0.052939199999999999, 0.052939199999999999, 0.052939199999999999, 0.052939199999999999, 0.052939199999999999, 0.052939199999999999, 0.052939199999999999,
            0.053468599999999998, 0.053468599999999998, 0.053468599999999998, 0.053468599999999998, 0.053468599999999998, 0.053468599999999998, 0.053468599999999998, 0.053468599999999998,
            0.054003299999999997, 0.054003299999999997, 0.054003299999999997, 0.054003299999999997, 0.054003299999999997, 0.054003299999999997, 0.054003299999999997, 0.054003299999999997,
            0.054543300000000003, 0.054543300000000003, 0.054543300000000003, 0.054543300000000003, 0.054543300000000003, 0.054543300000000003, 0.054543300000000003, 0.054543300000000003,
            0.055088699999999997, 0.055088699999999997, 0.055088699999999997, 0.055088699999999997, 0.055088699999999997, 0.055088699999999997, 0.055088699999999997, 0.055088699999999997,
            0.055639599999999997, 0.055639599999999997, 0.055639599999999997, 0.055639599999999997, 0.055639599999999997, 0.055639599999999997, 0.055639599999999997, 0.055639599999999997,
            0.056196000000000003, 0.056196000000000003, 0.056196000000000003, 0.056196000000000003, 0.056196000000000003, 0.056196000000000003, 0.056196000000000003, 0.056196000000000003,
            0.056758000000000003, 0.056758000000000003, 0.056758000000000003, 0.056758000000000003, 0.056758000000000003, 0.056758000000000003, 0.056758000000000003, 0.056758000000000003,
            0.057325599999999997, 0.057325599999999997, 0.057325599999999997, 0.057325599999999997, 0.057325599999999997, 0.057325599999999997, 0.057325599999999997, 0.057325599999999997,
            0.0578988, 0.0578988, 0.0578988, 0.0578988, 0.0578988, 0.0578988, 0.0578988, 0.0578988,
            0.058477800000000003, 0.058477800000000003, 0.058477800000000003, 0.058477800000000003, 0.058477800000000003, 0.058477800000000003, 0.058477800000000003, 0.058477800000000003,
            0.0590626, 0.0590626, 0.0590626, 0.0590626, 0.0590626, 0.0590626, 0.0590626, 0.0590626,
            0.059653200000000003, 0.059653200000000003, 0.059653200000000003, 0.059653200000000003, 0.059653200000000003, 0.059653200000000003, 0.059653200000000003, 0.059653200000000003,
            0.060249700000000003, 0.060249700000000003, 0.060249700000000003, 0.060249700000000003, 0.060249700000000003, 0.060249700000000003, 0.060249700000000003, 0.060249700000000003,
            0.060852200000000002, 0.060852200000000002, 0.060852200000000002, 0.060852200000000002, 0.060852200000000002, 0.060852200000000002, 0.060852200000000002, 0.060852200000000002,
            0.0614607, 0.0614607, 0.0614607, 0.0614607, 0.0614607, 0.0614607, 0.0614607, 0.0614607,
            0.062075400000000003, 0.062075400000000003, 0.062075400000000003, 0.062075400000000003, 0.062075400000000003, 0.062075400000000003, 0.062075400000000003, 0.062075400000000003,
            0.062696100000000005, 0.062696100000000005, 0.062696100000000005, 0.062696100000000005, 0.062696100000000005, 0.062696100000000005, 0.062696100000000005, 0.062696100000000005,
            0.063323099999999993, 0.063323099999999993, 0.063323099999999993, 0.063323099999999993, 0.063323099999999993, 0.063323099999999993, 0.063323099999999993, 0.063323099999999993,
            0.063956299999999994, 0.063956299999999994, 0.063956299999999994, 0.063956299999999994, 0.063956299999999994, 0.063956299999999994, 0.063956299999999994, 0.063956299999999994,
            0.064595899999999998, 0.064595899999999998, 0.064595899999999998, 0.064595899999999998, 0.064595899999999998, 0.064595899999999998, 0.064595899999999998, 0.064595899999999998,
            0.065241800000000003, 0.065241800000000003, 0.065241800000000003, 0.065241800000000003, 0.065241800000000003, 0.065241800000000003, 0.065241800000000003, 0.065241800000000003,
            0.0658942, 0.0658942, 0.0658942, 0.0658942, 0.0658942, 0.0658942, 0.0658942, 0.0658942,
            0.066553200000000007, 0.066553200000000007, 0.066553200000000007, 0.066553200000000007, 0.066553200000000007, 0.066553200000000007, 0.066553200000000007, 0.066553200000000007,
            0.067218700000000006, 0.067218700000000006, 0.067218700000000006, 0.067218700000000006, 0.067218700000000006, 0.067218700000000006, 0.067218700000000006, 0.067218700000000006,
            0.067890900000000004, 0.067890900000000004, 0.067890900000000004, 0.067890900000000004, 0.067890900000000004, 0.067890900000000004, 0.067890900000000004, 0.067890900000000004,
            0.0685698, 0.0685698, 0.0685698, 0.0685698, 0.0685698, 0.0685698, 0.0685698, 0.0685698,
            0.069255499999999998, 0.069255499999999998, 0.069255499999999998, 0.069255499999999998, 0.069255499999999998, 0.069255499999999998, 0.069255499999999998, 0.069255499999999998,
            0.069948099999999999, 0.069948099999999999, 0.069948099999999999, 0.069948099999999999, 0.069948099999999999, 0.069948099999999999, 0.069948099999999999, 0.069948099999999999,
            0.070647500000000002, 0.070647500000000002, 0.070647500000000002, 0.070647500000000002, 0.070647500000000002, 0.070647500000000002, 0.070647500000000002, 0.070647500000000002,
            0.071354000000000001, 0.071354000000000001, 0.071354000000000001, 0.071354000000000001, 0.071354000000000001, 0.071354000000000001, 0.071354000000000001, 0.071354000000000001, 0.071354000000000001,
            0.072067599999999996, 0.072067599999999996, 0.072067599999999996, 0.072067599999999996, 0.072067599999999996, 0.072067599999999996, 0.072067599999999996, 0.072067599999999996, 0.072067599999999996,
            0.072788199999999997, 0.072788199999999997, 0.072788199999999997, 0.072788199999999997, 0.072788199999999997, 0.072788199999999997, 0.072788199999999997, 0.072788199999999997, 0.072788199999999997,
            0.073516100000000001, 0.073516100000000001, 0.073516100000000001, 0.073516100000000001, 0.073516100000000001, 0.073516100000000001, 0.073516100000000001, 0.073516100000000001, 0.073516100000000001,
            0.074251300000000006, 0.074251300000000006, 0.074251300000000006, 0.074251300000000006, 0.074251300000000006, 0.074251300000000006, 0.074251300000000006, 0.074251300000000006, 0.074251300000000006,
            0.074993799999999999, 0.074993799999999999, 0.074993799999999999, 0.074993799999999999, 0.074993799999999999, 0.074993799999999999, 0.074993799999999999, 0.074993799999999999, 0.074993799999999999,
            0.075743699999999997, 0.075743699999999997, 0.075743699999999997, 0.075743699999999997, 0.075743699999999997, 0.075743699999999997, 0.075743699999999997, 0.075743699999999997, 0.075743699999999997,
            0.076501200000000005, 0.076501200000000005, 0.076501200000000005, 0.076501200000000005, 0.076501200000000005, 0.076501200000000005, 0.076501200000000005, 0.076501200000000005, 0.076501200000000005,
            0.077266199999999993, 0.077266199999999993, 0.077266199999999993, 0.077266199999999993, 0.077266199999999993, 0.077266199999999993, 0.077266199999999993, 0.077266199999999993, 0.077266199999999993,
            0.078038800000000005, 0.078038800000000005, 0.078038800000000005, 0.078038800000000005, 0.078038800000000005, 0.078038800000000005, 0.078038800000000005, 0.078038800000000005, 0.078038800000000005,
            0.078819200000000006, 0.078819200000000006, 0.078819200000000006, 0.078819200000000006, 0.078819200000000006, 0.078819200000000006, 0.078819200000000006, 0.078819200000000006, 0.078819200000000006,
            0.079607399999999995, 0.079607399999999995, 0.079607399999999995, 0.079607399999999995, 0.079607399999999995, 0.079607399999999995, 0.079607399999999995, 0.079607399999999995, 0.079607399999999995,
            0.080403500000000003, 0.080403500000000003, 0.080403500000000003, 0.080403500000000003, 0.080403500000000003, 0.080403500000000003, 0.080403500000000003, 0.080403500000000003, 0.080403500000000003,
            0.081207500000000002, 0.081207500000000002, 0.081207500000000002, 0.081207500000000002, 0.081207500000000002, 0.081207500000000002, 0.081207500000000002, 0.081207500000000002, 0.081207500000000002,
            0.082019599999999998, 0.082019599999999998, 0.082019599999999998, 0.082019599999999998, 0.082019599999999998, 0.082019599999999998, 0.082019599999999998, 0.082019599999999998, 0.082019599999999998,
            0.082839800000000005, 0.082839800000000005, 0.082839800000000005, 0.082839800000000005, 0.082839800000000005, 0.082839800000000005, 0.082839800000000005, 0.082839800000000005, 0.082839800000000005,
            0.083668199999999998, 0.083668199999999998, 0.083668199999999998, 0.083668199999999998, 0.083668199999999998, 0.083668199999999998, 0.083668199999999998, 0.083668199999999998, 0.083668199999999998,
            0.084504899999999994, 0.084504899999999994, 0.084504899999999994, 0.084504899999999994, 0.084504899999999994, 0.084504899999999994, 0.084504899999999994, 0.084504899999999994, 0.084504899999999994,
            0.085349900000000006, 0.085349900000000006, 0.085349900000000006, 0.085349900000000006, 0.085349900000000006, 0.085349900000000006, 0.085349900000000006, 0.085349900000000006, 0.085349900000000006,
            0.086203399999999999, 0.086203399999999999, 0.086203399999999999, 0.086203399999999999, 0.086203399999999999, 0.086203399999999999, 0.086203399999999999, 0.086203399999999999, 0.086203399999999999,
            0.087065500000000004, 0.087065500000000004, 0.087065500000000004, 0.087065500000000004, 0.087065500000000004, 0.087065500000000004, 0.087065500000000004, 0.087065500000000004, 0.087065500000000004,
            0.087936100000000003, 0.087936100000000003, 0.087936100000000003, 0.087936100000000003, 0.087936100000000003, 0.087936100000000003, 0.087936100000000003, 0.087936100000000003, 0.087936100000000003,
            0.088815500000000006, 0.088815500000000006, 0.088815500000000006, 0.088815500000000006, 0.088815500000000006, 0.088815500000000006, 0.088815500000000006, 0.088815500000000006, 0.088815500000000006,
            0.089703599999999994, 0.089703599999999994, 0.089703599999999994, 0.089703599999999994, 0.089703599999999994, 0.089703599999999994, 0.089703599999999994, 0.089703599999999994,
            0.090600700000000006, 0.090600700000000006, 0.090600700000000006, 0.090600700000000006, 0.090600700000000006, 0.090600700000000006, 0.090600700000000006, 0.090600700000000006,
            0.091506699999999996, 0.091506699999999996, 0.091506699999999996, 0.091506699999999996, 0.091506699999999996, 0.091506699999999996, 0.091506699999999996, 0.091506699999999996,
            0.092421699999999996, 0.092421699999999996, 0.092421699999999996, 0.092421699999999996, 0.092421699999999996, 0.092421699999999996, 0.092421699999999996, 0.092421699999999996,
            0.093345999999999998, 0.093345999999999998, 0.093345999999999998, 0.093345999999999998, 0.093345999999999998, 0.093345999999999998, 0.093345999999999998, 0.093345999999999998,
            0.094279399999999999, 0.094279399999999999, 0.094279399999999999, 0.094279399999999999, 0.094279399999999999, 0.094279399999999999, 0.094279399999999999, 0.094279399999999999,
            0.095222200000000007, 0.095222200000000007, 0.095222200000000007, 0.095222200000000007, 0.095222200000000007, 0.095222200000000007, 0.095222200000000007, 0.095222200000000007,
            0.096174399999999993, 0.096174399999999993, 0.096174399999999993, 0.096174399999999993, 0.096174399999999993, 0.096174399999999993, 0.096174399999999993, 0.096174399999999993,
            0.097136200000000006, 0.097136200000000006, 0.097136200000000006, 0.097136200000000006, 0.097136200000000006, 0.097136200000000006, 0.097136200000000006, 0.097136200000000006,
            0.0981075, 0.0981075, 0.0981075, 0.0981075, 0.0981075, 0.0981075, 0.0981075, 0.0981075,
            0.099088599999999999, 0.099088599999999999, 0.099088599999999999, 0.099088599999999999, 0.099088599999999999, 0.099088599999999999, 0.099088599999999999, 0.099088599999999999,
            0.1000795, 0.1000795, 0.1000795, 0.1000795, 0.1000795, 0.1000795, 0.1000795, 0.1000795,
            0.1010803, 0.1010803, 0.1010803, 0.1010803, 0.1010803, 0.1010803, 0.1010803, 0.1010803,
            0.1020911, 0.1020911, 0.1020911, 0.1020911, 0.1020911, 0.1020911, 0.1020911, 0.1020911,
            0.103112, 0.103112, 0.103112, 0.103112, 0.103112, 0.103112, 0.103112, 0.103112,
            0.1041431, 0.1041431, 0.1041431, 0.1041431, 0.1041431, 0.1041431, 0.1041431, 0.1041431,
            0.1051846, 0.1051846, 0.1051846, 0.1051846, 0.1051846, 0.1051846, 0.1051846, 0.1051846,
            0.10623639999999999, 0.10623639999999999, 0.10623639999999999, 0.10623639999999999, 0.10623639999999999, 0.10623639999999999, 0.10623639999999999, 0.10623639999999999,
            0.1072988, 0.1072988, 0.1072988, 0.1072988, 0.1072988, 0.1072988, 0.1072988, 0.1072988,
            0.1083718, 0.1083718, 0.1083718, 0.1083718, 0.1083718, 0.1083718, 0.1083718, 0.1083718,
            0.1094555, 0.1094555, 0.1094555, 0.1094555, 0.1094555, 0.1094555, 0.1094555, 0.1094555,
            0.11055, 0.11055, 0.11055, 0.11055, 0.11055, 0.11055, 0.11055, 0.11055,
            0.1116555, 0.1116555, 0.1116555, 0.1116555, 0.1116555, 0.1116555, 0.1116555, 0.1116555,
            0.1127721, 0.1127721, 0.1127721, 0.1127721, 0.1127721, 0.1127721, 0.1127721, 0.1127721,
            0.1138998, 0.1138998, 0.1138998, 0.1138998, 0.1138998, 0.1138998, 0.1138998, 0.1138998,
            0.1150388, 0.1150388, 0.1150388, 0.1150388, 0.1150388, 0.1150388, 0.1150388, 0.1150388,
            0.11618920000000001, 0.11618920000000001, 0.11618920000000001, 0.11618920000000001, 0.11618920000000001, 0.11618920000000001, 0.11618920000000001, 0.11618920000000001,
            0.1173511, 0.1173511, 0.1173511, 0.1173511, 0.1173511, 0.1173511, 0.1173511, 0.1173511,
            0.11852459999999999, 0.11852459999999999, 0.11852459999999999, 0.11852459999999999, 0.11852459999999999, 0.11852459999999999, 0.11852459999999999, 0.11852459999999999,
            0.11970989999999999, 0.11970989999999999, 0.11970989999999999, 0.11970989999999999, 0.11970989999999999, 0.11970989999999999, 0.11970989999999999, 0.11970989999999999, 0.11970989999999999,
            0.120907, 0.120907, 0.120907, 0.120907, 0.120907, 0.120907, 0.120907, 0.120907, 0.120907,
            0.122116, 0.122116, 0.122116, 0.122116, 0.122116, 0.122116, 0.122116, 0.122116, 0.122116,
            0.12333719999999999, 0.12333719999999999, 0.12333719999999999, 0.12333719999999999, 0.12333719999999999, 0.12333719999999999, 0.12333719999999999, 0.12333719999999999, 0.12333719999999999,
            0.1245706, 0.1245706, 0.1245706, 0.1245706, 0.1245706, 0.1245706, 0.1245706, 0.1245706, 0.1245706,
            0.12581629999999999, 0.12581629999999999, 0.12581629999999999, 0.12581629999999999, 0.12581629999999999, 0.12581629999999999, 0.12581629999999999, 0.12581629999999999, 0.12581629999999999,
            0.1270744, 0.1270744, 0.1270744, 0.1270744, 0.1270744, 0.1270744, 0.1270744, 0.1270744, 0.1270744,
            0.12834519999999999, 0.12834519999999999, 0.12834519999999999, 0.12834519999999999, 0.12834519999999999, 0.12834519999999999, 0.12834519999999999, 0.12834519999999999, 0.12834519999999999
    )

    val g1 = 65 * (rawGlucose.rawValue - calibrationInfo.i3).toDouble() / (calibrationInfo.i4.toInt() - calibrationInfo.i3).toDouble()
    val g2 = 1.045.pow(32.5 - temperature)
    val g3 = g1 * g2

    val v1 = t1[calibrationInfo.i2.toInt() - 1]
    val v2 = t2[calibrationInfo.i2.toInt() - 1]
    val value = round((g3 - v1) / v2).toInt()

    return rawGlucose.copy(
        value = value,
        temperature = temperature,
    )
}
